var TWO=function(){class Vector2{constructor(x=0,y=0){this.x=x,this.y=y}set(x,y){return this.x=x,this.y=y,this}_getTopLeftX(ctx){return ctx.canvas.offsetWidth/2+this.x}_getTopLeftY(ctx){return ctx.canvas.offsetHeight/2-this.y}}class Object2D{constructor(mesh=new Mesh,child=[]){this.mesh=mesh,this.children=child}add(child){this.children.push(child)}}Object2D;class PointGeometry{constructor(){}}class LineGeometry{constructor(l=1){this.l=l}}class RectGeometry{constructor(w=1,h=1){this.w=w,this.h=h}}class Mesh{constructor(geometry=null,material=null){this.geometry=geometry,this.material=material,this.position=new Vector2}}return{Vector2:Vector2,Scene:class extends Object2D{constructor(){super()}add(child){super.add(new Object2D(mesh))}},PointGeometry:PointGeometry,LineGeometry:LineGeometry,RectGeometry:RectGeometry,Material:class{constructor(options){this.options={color:options.color||16777215}}_getRGB(){var color=this.options.color;return"rgb("+[Math.floor(color/65536),Math.floor(color%65536/256),color%256].join(",")+")"}},Mesh:Mesh,Renderer:class{constructor(ctx){this.ctx=ctx}render(scene){this._renderGroup(scene)}_renderGroup(group){this.ctx.canvas.width=this.ctx.canvas.width;for(var i=0;i<group.children.length;i++)this._renderMesh(group.children[i].mesh)}_renderMesh(mesh){switch(mesh.geometry.constructor){case PointGeometry:var topLeftX=mesh.position._getTopLeftX(this.ctx),topLeftY=mesh.position._getTopLeftY(this.ctx);this.ctx.fillStyle=mesh.material._getRGB(),this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.moveTo(topLeftX,topLeftY),this.ctx.lineTo(topLeftX+1,topLeftY),this.ctx.stroke();break;case LineGeometry:topLeftX=mesh.position._getTopLeftX(this.ctx)-mesh.geometry.l/2,topLeftY=mesh.position._getTopLeftY(this.ctx);this.ctx.fillStyle=mesh.material._getRGB(),this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.moveTo(topLeftX,topLeftY),this.ctx.lineTo(topLeftX+mesh.geometry.l,topLeftY),this.ctx.stroke();break;case RectGeometry:topLeftX=mesh.position._getTopLeftX(this.ctx)-mesh.geometry.w/2,topLeftY=mesh.position._getTopLeftY(this.ctx)-mesh.geometry.h/2;this.ctx.fillStyle=mesh.material._getRGB(),this.ctx.fillRect(topLeftX,topLeftY,mesh.geometry.w,mesh.geometry.h);break;default:throw"Unknown geometry"}}}}}();"object"==typeof module&&module.exports?module.exports=TWO:"function"==typeof define&&define.amd&&define([],function(){return TWO});